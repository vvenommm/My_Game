package f_game;

import e_oop.ScanUtil;
import f_game.Foods.CheeseB;
import f_game.Foods.ChickB;
import f_game.Foods.Coke;
import f_game.Foods.Hamburger;
import f_game.Foods.HotCoffee;
import f_game.Foods.IcedCoffee;
import f_game.Foods.VeggieB;

public class Hoos_Burgers {


	
	public static void main(String[] args) {
		System.out.println("플레이어의 이름을 입력해주세요. \n->");
		String name = ScanUtil.nextLine();
		Player p = new Player(name);
		p.recipes[0] = new Foods.Coke();
		
		
		System.out.println("환영합니다!" + p.name + "'s Burgers!!");
		System.out.println("햄버거를 팔아서 레벨을 올려보세요!");
		System.out.println("손님이 행복해 하면 레시피를 선물로 드려요!");
		System.out.println("메뉴를 늘려서 가게를 키워봐요!");
		System.out.println("끝까지 살아남아 봅시다!!");
		System.out.println("Welcome to " + p.name + "'s Burgers!");
		
		String[] customers = {"정후", "주영", "다혜", "다솜", "정영"
				, "가은", "상학", "현국", "은태", "명성"
				, "재원", "승제", "홍종", "규범", "은실"
				, "희경", "세영", "민정", "민정", "윤미"
				, "수원", "소정", "정은", "지은", "지연"};
		
		Customer c = new Customer(customers[(int)(Math.random()*customers.length)]);
		System.out.println(c.name); //나중에 지우기
		
		new Hoos_Burgers().start(p, c);
		
	}
	
	void start(Player p, Customer c) {
		while(true) {
			System.out.println("┌───────────────┐");
			System.out.println("    1. 내 상태  \n    2. 계속하기\n    0. 종료");
			System.out.println("└───────────────┘");
			System.out.println("숫자를 입력해주세요.\n->");
			int input = ScanUtil.nextInt1();
			
			switch(input) {
			case 1:
				p.showStatus();
				break;
			case 2:
				System.out.println("\n\n[SYSTEM] " + c.name + "(손님)이/가 다가오고 있습니다.");
				int num = (int)(Math.random()*7);
				
				Hamburger ha = new Foods.Hamburger();
				ChickB cb = new ChickB();
				CheeseB chb = new CheeseB();
				VeggieB vb = new VeggieB();
				Coke ck = new Coke();
				HotCoffee hc = new HotCoffee();
				IcedCoffee ic = new IcedCoffee();
				Foods[] bag = new Foods[7];
				
				bag[0] = new Foods.Hamburger();
				bag[1] = new Foods.ChickB();
				bag[2] = new Foods.CheeseB();
				bag[3] = new Foods.VeggieB();
				bag[4] = new Foods.Coke();
				bag[5] = new Foods.HotCoffee();
				bag[6] = new Foods.IcedCoffee();
				p.playing(p, c, bag[num]);
				break;
			case 0:
				System.out.println("게임을 종료합니다.");
				System.exit(0);;
			}
		}
	}
	
	
	//돈 계산
	static void pay(Player p, Customer c, Foods food) {
		p.money += food.price;
		p.money -= food.cost;
		p.exp += food.exp;
		c.money -= food.price;
	}

	//실패 경우 돈 계산
	static void payFail(Player p, Customer c, Foods food) {
		p.money += food.price/2;
		p.money -= food.cost;
		p.exp -= c.exp;
		c.money -= food.price/2;
	}
	

}
