package f_game;

import e_oop.ScanUtil;
import f_game.Foods.Hamburger;

public class Player {

	String name; //이름
	int exp; //경험치
	int money;
	int level; //레벨
	Foods[] recipes; //보유 음식 레시피
	int[] recipesNum;
	
	//초기화
	Player(String name){
		this.name = name;
		this.exp = 0;
		this.money = 100000;
		this.level = 1;
		this.recipes = new Foods[7];
		this.recipesNum = new int[7];
	}
	
	
	
	//플레이어 정보
	void showStatus() {
		System.out.println("\n\n┌──────────────────────┐");
		System.out.println("│         내 정보                │\n");
		System.out.println("    이름 : " + name);
		System.out.println("    레벨 : " + level);
		System.out.println("    경험치 : " + exp + "/100");
		System.out.println("    재산 : " + money + "원");
		System.out.println("\n -------보유 레시피-------");
		for(int i = 0; i < recipes.length; i++) {
			if(recipes[i] != null) {
				recipes[i].showMenuInfo();
			}
		}
		System.out.println("└──────────────────────┘\n\n");
	}
	
	

	//주문받기
	void playing (Player p, Customer c, Foods f) {
		int code = 0;
		int temp = 0;
		boolean flag = true;		
		System.out.println(c.name + " : 안녕하세요 ~");
		while(flag == true) {
			int ran = (int)(Math.random()*7);
			if (recipes[ran] != null) {
				System.out.println(c.name + " : " + recipes[ran].name + " 주세요!");
				temp = ran;
				flag = false;
				break;
			}
		}
		System.out.println(p.name + " : 네~♬ " + recipes[temp].name + " 주문 받았습니다~\n");
		System.out.println("[SYSTEM] " + recipes[temp].name + "을/를 조리해 봅시다!");
		code = recipes[temp].code;
		serve(code, p, c, f);
	}
	
	
	
	//플레이어의 조리 시도
	void serve(int code, Player p, Customer c, Foods f) {
		System.out.println("[SYSTEM] 숫자를 입력해서 재료를 차곡차곡 쌓아보세요!");
		System.out.println("[SYSTEM] 음료의 경우 해당 번호만 입력하면 됩니다.\n");
		System.out.println("┌──────────────┐");
		System.out.println("    *재료*");
		System.out.println("  1. 빵\n  2. 고 기 패 티\n  3. 치 킨 패 티\n  4. 비 건 패 티\n  5. 치 즈\n  6. 피 클\n  7. 상 추\n  8. 양 파\n  9. 소 스\n --------------\n  1. 탄 산 음 료\n  2. 따 듯 한   커 피\n  3. 시 원 한   커 피");
		System.out.println ("└───────────────┘");
		System.out.println("->");
		int input = ScanUtil.nextInt1();
		cooking(input, code, p, c, f);
	}
		
		
		
	//조리하기 - 이모티콘 출력
	void cooking(int input, int code, Player p, Customer c, Foods f) {
		if(input == 16257891) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.ham();
			if(code == 16257891) {
				c.reaction1();
				while(100 <= this.exp) {
					getEXP(f);
					this.exp -= 100;
				}
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
				while(100 <= this.exp) {
					getEXP();
					this.exp -= 100;
				}
			}
		}else if(input == 16853791) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.chick();
			if(code == 16853791) {
				c.reaction1();
				getEXP();
				Hoos_Burgers.pay(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else if(input == 15625791) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.chee();
			if(code == 15625791) {
				c.reaction1();
				Hoos_Burgers.pay(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else if(input == 1846971) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.veg();
			if(code == 1846971) {
				c.reaction1();
				Hoos_Burgers.pay(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else if(input == 1) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.drink();
			if(code == 1) {
				c.reaction1();
				Hoos_Burgers.pay(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else if(input == 2) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.hotC();
			if(code == 2) {
				c.reaction1();
				Hoos_Burgers.pay(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else if(input == 3) {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.iceC();
			if(code == 3) {
				c.reaction1();
				Hoos_Burgers.payFail(p, c, f);
			}else {
				c.reaction2();
				Hoos_Burgers.payFail(p, c, f);
			}
		}else {
			System.out.println("[SYSTEM] 재료비로 " + f.cost + "원을 썼습니다.");
			Foods.WrongOrder();
			c.reaction3();
			Hoos_Burgers.payFail(p, c, f);
		}
	}

	
	
	//성공 시 경험치 변경
	void getEXP(Foods f){
		System.out.println("[SYSTEM] 주문 처리 완료!!\n[SYSTEM] 축하합니다!!!");
		System.out.println("[SYSTEM] 보상으로 " + f.price + "원을 벌었습니다.");
		System.out.println("[SYSTEM] 보상으로 " + f.exp + "의 경험치를 얻었습니다.");
		while(100 <= this.exp) {
			this.exp -= 100;
			levelUP();
		}	
	}	
	
	
	
	//레벨 업
	void levelUP() {
		level++;
		money += 500000;
		System.out.println("◆◇◆ LEVEL UP ◇◆◇");
		System.out.println("＼😆へ　 へ😁ヘ　 く😎/ ");
		System.out.println("ヘ / 　　　 ( ヘ　　 　( ヘ ");
		System.out.println("　 >　 　 <　　　　く");
		System.out.println("[SYSTEM] 축하합니다!!! 레벨 업!!");
		System.out.println("[SYSTEM] 레벨 " + level + " 도달!");
		System.out.println("[SYSTEM] 레벨 업 보상으로 " + 50000 + "원을 받았습니다!");
	}
		
}
