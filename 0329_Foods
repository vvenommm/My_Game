package f_game;

public class Foods { //부모 클래스
	
	String name; //만들 수 있는 음식 이름
	int price; //가격
	int exp; //경험치
	int cost; //재료비
	int code; //음식 코드
	Foods[] arr;
	int[] codeNum; //음식 코드를 담은 배열
	
	
	Foods(String name, int price, int exp, int cost, int code){
		this.name = name;
		this.price = price;
		this.exp = exp;
		this.cost = cost;
		this.code = code;
		this.codeNum = new int [7];
		codeNum[0] = 16257891;
		codeNum[1] = 16853791;
		codeNum[2] = 15625791;
		codeNum[3] = 1846971;
		codeNum[4] = 1;
		codeNum[5] = 2;
		codeNum[6] = 3;
	}
	
	
	public void showMenuInfo() {
		String info = "        " + name;
		info += "\n        가 격 : " + price + "원";
		info += "\n        경험치 :" + exp;
		info += "\n        재료비 : " + cost + "원\n";
		
		System.out.println(info);
	}
	
	
	//랜덤 레시피 받기
	void getRecipe(Player p, Foods f) {
		boolean flag = true;
		while(flag) {
			int rand = (int)(Math.random()*f.arr.length);
			if(p.recipesNum[rand] == 0) {
				p.recipes[rand] = f.arr[rand];
				p.recipesNum[rand] = 1;
				flag = false;
			}
		}
	}

	
	/////////////////////////////////////////////////////////////////////////
	

	//메뉴 클래스들 (자식 클래스)

	public static class Hamburger extends Foods{
		Hamburger(){
			super("햄버거", 4500, 300, 3030, 16257891);
		}
	}

	public static class ChickB extends Foods{
		ChickB(){
			super("치킨버거", 5500, 530, 3590, 16853791);
		}
	}

	public static class CheeseB extends Foods{
		CheeseB(){
			super("치즈버거", 5000, 460, 2730, 15625791);
		}
	}

	public static class VeggieB extends Foods{
		VeggieB(){
			super("비건버거", 6000, 700, 2170, 1846971);
		}
	}

	public static class Coke extends Foods{
		Coke(){
			super("콜라", 2000, 70, 50, 1);
		}
	}

	public static class HotCoffee extends Foods{
		HotCoffee(){
			super("따듯한 커피", 2500, 90, 100, 2);
		}
	}

	public static class IcedCoffee extends Foods{
		IcedCoffee(){
			super("시원한 커피", 2800, 103, 103, 3);
		}
	}
	
	
	/////////////////////////////////////////////////////////////////
	
	
	//버거 임티
	public static void ham() {
		System.out.println(" _____________ ");
		System.out.println("(             )");
		System.out.println(" ///////////// ");
		System.out.println(" )) ))) ))) )) ");
		System.out.println(" @ @ @ @ @ @ @ ");
		System.out.println(" ≡≡≡≡≡≡≡≡≡≡≡≡≡ ");
		System.out.println(" ▒▒▒▒▒▒▒▒▒▒▒▒▒");
		System.out.println(" ∞  ∞  ∞  ∞  ∞");
		System.out.println("(_____________)");
	}
	
	
	public static void chick() {
		System.out.println(" _____________ ");
		System.out.println("(             )");
		System.out.println(" ///////////// ");
		System.out.println(" @ @ @ @ @ @ @ ");
		System.out.println("  ★☆★☆★☆★☆★☆★ ");
		System.out.println(" ≡≡≡≡≡≡≡≡≡≡≡≡≡ ");
		System.out.println(" )) ))) ))) )) ");
		System.out.println(" ∞  ∞  ∞  ∞  ∞");
		System.out.println("(_____________)");
	}
	
	
	public static void chee() {
		System.out.println(" _____________ ");
		System.out.println("(             )");
		System.out.println(" ///////////// ");
		System.out.println(" @ @ @ @ @ @ @ ");
		System.out.println(" ≡≡≡≡≡≡≡≡≡≡≡≡≡ ");
		System.out.println(" ▒▒▒▒▒▒▒▒▒▒▒▒▒");
		System.out.println(" ∞  ∞  ∞  ∞  ∞");
		System.out.println(" ≡≡≡≡≡≡≡≡≡≡≡≡≡ ");
		System.out.println("(_____________)");
	}
	
	
	public static void veg() {
		System.out.println(" _____________ ");
		System.out.println("(             )");
		System.out.println(" @ @ @ @ @ @ @ ");
		System.out.println(" ///////////// ");
		System.out.println(" ∞  ∞  ∞  ∞  ∞");
		System.out.println(" ●○●○●○●○●○●○●");
		System.out.println(" )) ))) ))) )) ");
		System.out.println("(_____________)");
	}
	
	
	public static void drink() {
		System.out.println("        // ");
		System.out.println("       //  ");
		System.out.println("      //   ");
		System.out.println(" ____//____");
		System.out.println("│     ∪  ˘     │");
		System.out.println("│          │");
		System.out.println("│          │");
		System.out.println("│  ∪                    │");
		System.out.println("│          │");
		System.out.println("│                  ∪    │");
		System.out.println("│          │");
		System.out.println("└──────────┘");
	}
	
	public static void hotC() {
		System.out.println("   )  )  (  ");
		System.out.println("    )   )   ");
		System.out.println("  (   (   ( ");
		System.out.println(" ___(____)_");
		System.out.println("│          │");
		System.out.println("│          │────┐");
		System.out.println("│          │──┐ │");
		System.out.println("│          │  │ │");
		System.out.println("│          │  │ │");
		System.out.println("│          │──┘ │");
		System.out.println("│          │────┘");
		System.out.println("└──────────┘");
	}
	
	public static void iceC() {
		System.out.println("        // ");
		System.out.println("       //  ");
		System.out.println("      //   ");
		System.out.println(" ____//____");
		System.out.println("│     ∪  ˘     │");
		System.out.println("│          │");
		System.out.println("│          │");
		System.out.println("│  ∪                    │");
		System.out.println("│          │");
		System.out.println("│                  ∪    │");
		System.out.println("│          │");
		System.out.println("└──────────┘");
	}
	
	public static void WrongOrder() {
		System.out.println(" @  @@    @ ");
		System.out.println(" __ __   _____ ");
		System.out.println("(  @    ())   )");
		System.out.println(" /()// (())/// ");
		System.out.println("(_  __  __ ___)");
		System.out.println(" ● ●○     ○ ");
		System.out.println(" )) ))) ))) )) ");
		System.out.println(" ∞     ∞  ∞    ");
	}
	
}



